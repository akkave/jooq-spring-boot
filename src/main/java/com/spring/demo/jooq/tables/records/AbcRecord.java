/**
 * This class is generated by jOOQ
 */
package com.spring.demo.jooq.tables.records;


import com.spring.demo.jooq.tables.Abc;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbcRecord extends UpdatableRecordImpl<AbcRecord> implements Record4<Integer, String, Integer, Timestamp> {

    private static final long serialVersionUID = -2090048918;

    /**
     * Setter for <code>mylocaldb.abc.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mylocaldb.abc.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mylocaldb.abc.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mylocaldb.abc.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mylocaldb.abc.rank</code>.
     */
    public void setRank(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mylocaldb.abc.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mylocaldb.abc.currentDate</code>.
     */
    public void setCurrentdate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>mylocaldb.abc.currentDate</code>.
     */
    public Timestamp getCurrentdate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Abc.ABC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Abc.ABC.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Abc.ABC.RANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Abc.ABC.CURRENTDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRank();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCurrentdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbcRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbcRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbcRecord value3(Integer value) {
        setRank(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbcRecord value4(Timestamp value) {
        setCurrentdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbcRecord values(Integer value1, String value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AbcRecord
     */
    public AbcRecord() {
        super(Abc.ABC);
    }

    /**
     * Create a detached, initialised AbcRecord
     */
    public AbcRecord(Integer id, String name, Integer rank, Timestamp currentdate) {
        super(Abc.ABC);

        set(0, id);
        set(1, name);
        set(2, rank);
        set(3, currentdate);
    }
}
