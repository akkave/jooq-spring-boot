/**
 * This class is generated by jOOQ
 */
package com.spring.demo.jooq.tables.records;


import com.spring.demo.jooq.tables.Employee;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record4<Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 1265603939;

    /**
     * Setter for <code>mylocaldb.employee.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mylocaldb.employee.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mylocaldb.employee.emp_id</code>.
     */
    public void setEmpId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mylocaldb.employee.emp_id</code>.
     */
    public Integer getEmpId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mylocaldb.employee.emp_name</code>.
     */
    public void setEmpName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mylocaldb.employee.emp_name</code>.
     */
    public String getEmpName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mylocaldb.employee.company_id</code>.
     */
    public void setCompanyId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>mylocaldb.employee.company_id</code>.
     */
    public Integer getCompanyId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Employee.EMPLOYEE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Employee.EMPLOYEE.EMP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Employee.EMPLOYEE.EMP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Employee.EMPLOYEE.COMPANY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getEmpId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEmpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCompanyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeRecord value2(Integer value) {
        setEmpId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeRecord value3(String value) {
        setEmpName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeRecord value4(Integer value) {
        setCompanyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployeeRecord values(Integer value1, Integer value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(Integer id, Integer empId, String empName, Integer companyId) {
        super(Employee.EMPLOYEE);

        set(0, id);
        set(1, empId);
        set(2, empName);
        set(3, companyId);
    }
}
